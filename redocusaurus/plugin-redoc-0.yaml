openapi: 3.0.0
info:
  description: API Template project
  title: '@dev-lambda/api-template'
  version: 1.0.0
  license:
    name: ISC
    url: https://dev-lambda.github.io/api-template/license
  termsOfService: https://dev-lambda.github.io/api-template/terms
  contact:
    name: API Support
    email: support@devlambda.com
    url: http://dev-lambda.github.io/api-template/support
  externalDocs:
    description: Full documentation site
    url: https://dev-lambda.github.io/api-template/
servers:
  - url: /
    description: This server
  - url: http://localhost:3000/
    description: Development server
paths:
  /openAPI:
    get:
      summary: API specs file
      description: Get the OpenAPI json description for this API
      tags:
        - Integration
      responses:
        '200':
          description: A json containing the OpenAPI specification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base'
  /health:
    get:
      summary: Health probe
      description: Health probe for liveness and readiness check
      tags:
        - Monitoring
      responses:
        '200':
          description: Returns `ok` status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healtStatus'
              example:
                server: true
                db: true
        '500':
          description: Either the db or the server is not working as expected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healtStatus'
              examples:
                dbFail:
                  summary: the db connexion is faulty
                  value:
                    server: true
                    db: false
                serverFail:
                  summary: the api server is faulty
                  value:
                    server: false
                    db: true
                chaos:
                  summary: pure chaos
                  value:
                    server: false
                    db: false
  /wrongPath:
    get:
      summary: Not found
      description: The response given on any unknown path
      tags:
        - API
      responses:
        '404':
          description: The `not found` response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFoundMessage'
              example:
                message: not found
                path: /wrongPath
  /:
    get:
      summary: Base response
      description: The default `200 OK` response at the root
      tags:
        - API
      responses:
        '200':
          description: The `ok` response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
              example:
                message: ok
components:
  schemas:
    healtStatus:
      type: object
      properties:
        server:
          type: boolean
        db:
          type: boolean
    notFoundMessage:
      type: object
      properties:
        message:
          type: string
        path:
          type: string
    message:
      type: object
      properties:
        message:
          type: string
    base: |
      {
          "$id": "https://spec.openapis.org/oas/3.1/dialect/base",
          "$schema": "https://json-schema.org/draft/2020-12/schema",

          "title": "OpenAPI 3.1 Schema Object Dialect",
          "description": "A JSON Schema dialect describing schemas found in OpenAPI documents",

          "$vocabulary": {
              "https://json-schema.org/draft/2020-12/vocab/core": true,
              "https://json-schema.org/draft/2020-12/vocab/applicator": true,
              "https://json-schema.org/draft/2020-12/vocab/unevaluated": true,
              "https://json-schema.org/draft/2020-12/vocab/validation": true,
              "https://json-schema.org/draft/2020-12/vocab/meta-data": true,
              "https://json-schema.org/draft/2020-12/vocab/format-annotation": true,
              "https://json-schema.org/draft/2020-12/vocab/content": true,
              "https://spec.openapis.org/oas/3.1/vocab/base": false
          },

          "$dynamicAnchor": "meta",

          "allOf": [
              { "$ref": "https://json-schema.org/draft/2020-12/schema" },
              { "$ref": "https://spec.openapis.org/oas/3.1/meta/base" }
          ]
      }
tags:
  - name: Integration
    description: Integration support resources
  - name: Monitoring
    description: Monitoring and health check features
  - name: API
    description: API specific routes
    externalDocs:
      url: https://dev-lambda.github.io/api-template/
